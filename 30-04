package Banco;

import javax.swing.JOptionPane;

public class Main {
	  public static void main(String[] args) throws Exception {
	    MySQLAccess dao1 = new MySQLAccess();
	    dao1.readDataBase();
	  }
	  public class Principal {
		  public static void main(String[] args) {
		  String menu = "1-Cadastrar\n2-Atualizar\n3-Apagar\n4-Listar\n0-Sair";
		  int op;
		  do{
		  op = Integer.parseInt(JOptionPane.showInputDialog(menu));
		  switch (op){
		  case 1:
		  break;
		  case 2:
		  break;
		  case 3:
		  break;
		  case 4:
		  break;
		  case 0:
		  break;
		  default:
		  JOptionPane.showMessageDialog(null, "Opção inválida");
		  }

		  }while (op != 0);
		  }
		 }
	  public void inserir (){
		  //1: Definir o comando SQL
		  String sql = "INSERT INTO tb_pessoa(nome, fone, email) VALUES (?, ?, ?)";
		  //2: Abrir uma conexão
		  ConnectionFactory factory = new ConnectionFactory();
		  try (Connection c = factory.obtemConexao()){
		  //3: Pré compila o comando
		  PreparedStatement ps = c.prepareStatement(sql);
		  //4: Preenche os dados faltantes
		  ps.setString(1, nome);
		  ps.setString(2, fone);
		  ps.setString(3, email);
		  //5: Executa o comando
		  ps.execute();
		  }
		  catch (Exception e){
		  e.printStackTrace();
		  }
		  
		  }

case 1:{
	 String nome = JOptionPane.showInputDialog("Nome?");
	 String fone = JOptionPane.showInputDialog("Fone?");
	 String email = JOptionPane.showInputDialog("Email?");
	 Pessoa p = new Pessoa ();
	 p.setNome(nome);
	 p.setFone(fone);
	 p.setEmail(email);
	 p.inserir();
	 break;
	}
case 2:{
	 String nome = JOptionPane.showInputDialog("Nome?");
	 String fone = JOptionPane.showInputDialog("Fone?");
	 String email = JOptionPane.showInputDialog("Email?");
	 int codigo =
	Integer.parseInt(JOptionPane.showInputDialog("Codigo?"));
	 Pessoa p = new Pessoa ();
	 p.setNome(nome);
	 p.setFone(fone);
	 p.setEmail(email);
	 p.setCodigo(codigo);
	 p.atualizar();
	 break;
	}
case 3:{
	 int codigo =
	 Integer.parseInt(JOptionPane.showInputDialog("Codigo?"));
	 Pessoa p = new Pessoa ();
	 p.setCodigo(codigo);
	 p.apagar();
	 break;
	 }
case 4:{
	 Pessoa p = new Pessoa();
	 p.listar();
	 break;
	}
	}






package Banco;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;

public class MySQLAccess {

	private Connection connect = null;
	private Statement statement = null;
	private PreparedStatement preparedStatement = null;
	private ResultSet resultSet = null;

	final private String host = "localhost";
	final private String user = "root";
	final private String passwd = "admin";

	public void readDataBase() throws Exception {
		try {
			// This will load the MySQL driver, each DB has its own driver
			Class.forName("com.mysql.jdbc.Driver");

			// Setup the connection with the DB
			connect = DriverManager
					.getConnection("jdbc:mysql://" + host + "/db_pessoas?" + "user=" + user + "&password=" + passwd);

			// Statements allow to issue SQL queries to the database
			statement = connect.createStatement();
			// Result set get the result of the SQL query
			resultSet = statement.executeQuery("select * from tb_pessoa");
			writeResultSet(resultSet);
			
			System.out.println("Banco de Dados Conectado com sucesso!");

		} catch (Exception e) {
			throw e;
		} finally {
			close();
		}

	}

	
	private void writeResultSet(ResultSet resultSet) throws SQLException {

		while (resultSet.next()) {

			String meuID = resultSet.getString("codigo");
			String meuNome = resultSet.getString("nome");

			System.out.println("id: " + meuID);
			System.out.println("nome: " + meuNome);

		}
	}
	
	// You need to close the resultSet
	private void close() {
		try {
			if (resultSet != null) {
				resultSet.close();
			}

			if (statement != null) {
				statement.close();
			}

			if (connect != null) {
				connect.close();
			}
		} catch (Exception e) {

		}
	}
	
	
	
	public Connection obtemConexao (){
		 try{
		 Connection c = DriverManager.getConnection(
		 "jdbc:mysql://" + host + ":" + porta + "/" + bd,
		 usuario,
		 senha
		 );
		 return c;
		 }
		 catch (Exception e){
		 e.printStackTrace();
		 return null;
		 }
		 }

	

}



package Banco;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.sql.ConnectionEvent;
import javax.swing.JOptionPane;

//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.PreparedStatement;

public class Pessoa {
	 private int codigo;
	 private String nome;
	 private String fone;
	 private String email;

	 //getters/setters
	 public void atualizar (){
		 //1: Definir o comando SQL
		 String sql = "UPDATE tb_pessoa SET nome = ?, fone = ?, email = ? WHERE codigo = ?";
		 //2: Abrir uma conexão
		 MySQLAccess factory = new MySQLAccess();
		 try (Connection c = factory.obtemConexao()){
		 //3: Pré compila o comando
		 PreparedStatement ps = c.prepareStatement(sql);
		 //4: Preenche os dados faltantes
		 ps.setString(1, nome);
		 ps.setString(2, fone);
		 ps.setString(3, email);
		 ps.setInt(4, codigo);
		 //5: Executa o comando
		 ps.execute();

		 }
		 catch (Exception e){
		 e.printStackTrace();
		 }
		 }
	 public void apagar (){
		 //1: Definir o comando SQL
		 String sql = "DELETE FROM tb_pessoa WHERE codigo = ?";
		 //2: Abrir uma conexão
		 Connection factory = new MySQLAccess();
		 try (Connection c = factory.obtemConexao()){
		 //3: Pré compila o comando
		 PreparedStatement ps = c.prepareStatement(sql);
		 //4: Preenche os dados faltantes
		 ps.setInt(1, codigo);
		 //5: Executa o comando
		 ps.execute();
		 }
		 catch (Exception e){
		 e.printStackTrace();
		 }
		}
	 public void listar (){
		 //1: Definir o comando SQL
		 String sql = "SELECT * FROM tb_pessoa";
		 //2: Abrir uma conexão
		 ConnectionEvent factory = new MySQLAccess();
		 try (Connection c = factory.obtemConexao()){
		 //3: Pré compila o comando
		 PreparedStatement ps = c.prepareStatement(sql);
		 //4: Executa o comando e guarda
		 //o resultado em um ResultSet
		 ResultSet rs = ps.executeQuery();
		 //5: itera sobre o resultado
		 while (rs.next()){
		 int codigo = rs.getInt("codigo");
		 String nome = rs.getString("nome");
		 String fone = rs.getString("fone");
		 String email = rs.getString("email");
		 String aux = String.format(
		 "Código: %d, Nome: %s, Fone: %s, Email: %s",
		 codigo,
		 nome,
		 fone,
		 email
		 );
		 JOptionPane.showMessageDialog (null, aux);

		 }
		 }
		 catch (Exception e){
		 e.printStackTrace();
		 }
		 }
	public void setNome(String nome2) {
		// TODO Auto-generated method stub
		
	}
	}

